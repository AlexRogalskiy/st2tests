---
# This workflow is an example of how someone might centralize the logic of how notifications are handled in response to
# an st2.ask execution. So, we start by accepting the original tag assigned to the st2.ask execution
# as input to this workflow, so we can make different notifications based on what it is.
#
# This keeps our notification rule simple - build one rule, and simply pass the original tag from the st2.ask
# action into this workflow for the decision on how to notify.
version: '2.0'
examples.complex_notification:
    description: A workflow for notifying relevant parties about an st2.ask execution
    type: direct
    input:
        - st2ask_tag
        - st2ask_execution
    tasks:
        decide_notification:
            action: core.noop
            on-complete:
                - notify_email: <% $.st2ask_tag = "managers" %>
                - notify_slack: <% $.st2ask_tag = "developers" %> 

        notify_email:
            action: email.send_email
            input:
                email_to: managers@example.org
                subject: New st2.ask execution needs your approval
                message: '{{trigger.execution_id}} is awaiting an approval action'

        notify_slack:
            action: slack.post_message
            input:
                channel: "#developers"
                message: '{{trigger.execution_id}} is awaiting an approval action'
