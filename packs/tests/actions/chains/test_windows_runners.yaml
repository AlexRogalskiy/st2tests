---
vars:
        samba_client_version: "4.1"
        winexe_version: "1.00"
        windows_command: 

chain:
    -
        name: "test_samba_client"
        ref: "core.local"
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "rpm -qa | grep samba-client-{{samba_client_version}}"
        on-success: "test_winexe"
    -
        name: "test_winexe"
        ref: "core.local"
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "winexe | grep 'version {{winexe_version}}'"
        on-success: "is_windows_host_provided"
    -
        name: "is_windows_host_provided"
        ref: "core.local"
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "test -n '{{windows_host}}'"
        on-success: "run_windows_cmd_action"
        on-failure: "skip_actual_tests"
    -
        name: "skip_actual_tests"
        ref: "core.local"
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "echo 'Windows host was not provided - skipping actual tests'; exit 0"
    -
        name: "run_windows_cmd_action"
        ref: "core.windows_cmd"
        params:
            host: "{{windows_host}}"
            username: "{{windows_username}}"
            password: "{{windows_password}}"
            cmd: "cmd /c ver"
        on-success: "check_windows_cmd_action"
    -
        name: "check_windows_cmd_action"
        ref: "core.local"
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "echo '{{run_windows_cmd_action.result}}' | grep 'Microsoft Windows'"
